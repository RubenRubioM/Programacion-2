
public class Romskip {
	private String nombre;
	private Mercancia[] bodega;
	private double carga;
	private static Galaxia mapa;
	
	
	public Romskip(String n,int i,double x){
		
		nombre=n;
		
		if(i<=0){
			i=3;
		}
		bodega=null;
		bodega=new Mercancia[i];
		
		if(x<=0){
			carga=8.5;
		}else{
			carga=x;
		}	
	}
	
	public String embarque(String s,Coordenada c){
		String devolucion="";
		boolean existe_mercancia=false;
		Sector[][][] espacio = mapa.getEspacio();
		int i2=0,j2=0,k2=0,l2=0;
		String[] etiqueta=null;
		//Ciclos para detectar el sector de la galaxia que coincida con esas coordenadas
		for (int i = 0; i < espacio.length; i++) {
			for (int j = 0; j < espacio[1].length; j++) {
				for (int k = 0; k < espacio[1][1].length; k++) {
					if(c.getCoordenadas()[0]==espacio[i][j][k].getCoordenada().getCoordenadas()[0]
						&& (c.getCoordenadas()[1]==espacio[i][j][k].getCoordenada().getCoordenadas()[1])
						&& (c.getCoordenadas()[2]==espacio[i][j][k].getCoordenada().getCoordenadas()[2])){
							
							i2=i;
							j2=j;
							k2=k;
							etiqueta=espacio[i][j][k].disponibilidad();
							//Ciclo para detectar la etiqueta de ese sector que coincida con la pasada
							for (int l = 0; l < etiqueta.length; l++) {
								if(s.equalsIgnoreCase(etiqueta[l])){
									l2=l;
									existe_mercancia=true;
									i=espacio.length;
								}
							}
					}
				}
			}
		}
		
		if(existe_mercancia){
			Mercancia[] mercancias=null;
			mercancias=espacio[i2][j2][k2].getAlmacen();
			boolean espacio_libre=false;
			boolean pesojusto=false;
			int posicion_mercancia=0;
			
			//Buscamos la mercancia almacenada en el almacen del sector
			for (int i = 0; i < mercancias.length; i++) {
				if(etiqueta[l2].equalsIgnoreCase(mercancias[i].getEtiqueta())){
					posicion_mercancia=i;
				}
			}
			for (int i = 0; i < bodega.length; i++) {
				if(bodega[i]==null){
					espacio_libre=true;
				}
			}
			if(!espacio_libre){
				devolucion=mercancias[posicion_mercancia].getEtiqueta()+": bodega de carga completa";
			}
			if(mercancias[posicion_mercancia].getPeso()>carga){
				devolucion=mercancias[posicion_mercancia].getEtiqueta()+": sobrecarga";
			}else{
				pesojusto=true;
			}
			//Recogemos la mercancia y la guardamos en la bodega
			if(espacio_libre==true && pesojusto==true){
				for (int i = 0; i < bodega.length; i++) {
					if(bodega[i]==null){
						bodega[i]=espacio[i2][j2][k2].recoge(s);
						i=bodega.length;
					}
				}
			}
			double suma1=0;
			double suma2=0;
			for(int i=0;i<(bodega.length-1);i++){
	            for(int j=i+1;j<bodega.length;j++){
	            	for (int j3 = 0; j3 < bodega[i].getDimension().length; j3++) {
						suma1=suma1+bodega[i].getDimension()[j3];
						suma2=suma2+bodega[j].getDimension()[j3];
					}
	                if(suma1>suma2){
	                    //Intercambiamos valores
	                	double[] d=null;
	                	d=new double[2];
	                	d[0]=1.1;
	                	d[1]=1.1;
	                	Mercancia variableauxiliar=new Mercancia(1.5,bodega[i].getDimension());
	                
	                    variableauxiliar=bodega[i];
	                    bodega[i]=bodega[j];
	                    bodega[j]=variableauxiliar;
	 
	                }else if(suma1==suma2){
	                	double[] d=null;
	                	d=new double[2];
	                	d[0]=1.1;
	                	d[1]=1.1;
	                	Mercancia variableauxiliar=new Mercancia(1.5,d);
	                
	                    variableauxiliar=bodega[i];
	                    bodega[i]=bodega[j];
	                    bodega[j]=variableauxiliar;
	                }
	            }
	        }
			
		}
		return devolucion;
		
	}

	public Mercancia desembarque(String s){
		Mercancia devolucion=null;
		for (int i = 0; i < bodega.length; i++) {
			if(bodega[i].getEtiqueta().equalsIgnoreCase(s)){
				devolucion=bodega[i];
				bodega[i]=null;
				i=bodega.length;
			}
		}
		
		for(int i=0;i<(bodega.length-1);i++){
            for(int j=i+1;j<bodega.length;j++){
                if(bodega[i]==null){
                    //Intercambiamos valores
                	double[] d=null;
                	d=new double[2];
                	d[0]=1.1;
                	d[1]=1.1;
                	Mercancia variableauxiliar=new Mercancia(1.5,d);
                
                    variableauxiliar=bodega[i];
                    bodega[i]=bodega[j];
                    bodega[j]=variableauxiliar;
                }
            }
        }
		return devolucion;
	}

	public int conteo(){
		int devolucion=0;
		
		for (int i = 0; i < bodega.length; i++) {
			if(bodega[i]!=null){
				devolucion=devolucion+1;
			}
		}
		return devolucion;
	}
	
	public Mercancia[] getBodega(){
		return bodega;
	}
	
	public String getNombre(){
		return nombre;
	}
	
	public static String getNombreMapa(){
		return mapa.getNombre();
	}
	
	public static void setMapa(Galaxia g){
		mapa = g;
	}
	
	public static boolean hayAgujerosNegros(){
		int agujeros = 0;
		boolean devolucion = false;
		
		agujeros = mapa.getAgujerosNegros();
		
		if(agujeros>0){
			devolucion = true;
		}else{
			devolucion = false;
		}
		
		return devolucion;
	}
}
